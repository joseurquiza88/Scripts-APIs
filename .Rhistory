View(df_contaminante_rbind)
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]],
city = resp_json[["results"]][["city"]],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]],
manufacturers = resp_json[["results"]][["manufacturers"]],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdated = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdated = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
df_contaminante_rbind <- data.frame()
i
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][1],
city = resp_json[["results"]][["city"]][1],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][1],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][1],
manufacturers = resp_json[["results"]][["manufacturers"]][1],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdated = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdated = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][1],
city = resp_json[["results"]][["city"]][1],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][1],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][1],
#manufacturers = resp_json[["results"]][["manufacturers"]][1],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdated = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdated = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
View(df_contaminante)
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][1],
city = resp_json[["results"]][["city"]][1],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][1],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][1],
manufacturers = resp_json[["results"]][["manufacturers"]][1],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdated = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdated = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
resp_json[["results"]][["manufacturers"]]
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][1],
city = resp_json[["results"]][["city"]][1],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][1],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][1],
#manufacturers = resp_json[["results"]][["manufacturers"]][1],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdated = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdated = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
View(df_contaminante_rbind)
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]],
city = resp_json[["results"]][["city"]],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]],
#manufacturers = resp_json[["results"]][["manufacturers"]][1],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdated = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdated = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][i],
city = resp_json[["results"]][["city"]][i],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][i],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][i],
#manufacturers = resp_json[["results"]][["manufacturers"]][1],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdated = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdated = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
getwd()
write.csv(df_contaminante_rbind,"D:/Josefina/Congresos/Air Pollution Conference 2024/OpenAQ/sensores_arg.csv")
###
for(p in 1:length(resp_json[["results"]][["manufacturers"]])){
print(p)
}
###
df_manufacturer_rbind <- data.frame()
for(p in 1:length(resp_json[["results"]][["manufacturers"]])){
print(p)
df_manufacturer <- data.frame(p = p,
manufacturer = resp_json[["results"]][["manufacturers"]][[p]][["manufacturerName"]])
df_manufacturer_rbind <- rbind (df_manufacturer_rbind, df_manufacturer)
}
View(df_manufacturer_rbind)
ddf_contaminante_rbind <- data.frame()
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][i],
city = resp_json[["results"]][["city"]][i],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][i],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][i],
resp_json[["results"]][["manufacturers"]][[i]][["manufacturerName"]],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
View(df_contaminante_rbind)
write.csv(df_contaminante_rbind,"D:/Josefina/Congresos/Air Pollution Conference 2024/OpenAQ/sensores_arg2.csv")
resp_json[["results"]][["manufacturers"]]
resp_json[["results"]][["manufacturers"]][1]
resp_json[["results"]][["manufacturers"]][34][1]
resp_json[["results"]][["manufacturers"]][34][2]
resp_json[["results"]][["manufacturers"]][34]
resp_json[["results"]][["manufacturers"]][[1]]
resp_json[["results"]][["manufacturers"]][1]
resp_json[["results"]][["manufacturers"]][2]
resp_json[["results"]][["manufacturers"]][[2]]
###
df_manufacturer_rbind <- data.frame()
for(p in 1:length(resp_json[["results"]][["manufacturers"]])){
print(p)
df_manufacturer <- data.frame(p = p,
manufacturerName = resp_json[["results"]][["manufacturers"]][[p]][["manufacturerName"]]
modelName = resp_json[["results"]][["manufacturers"]][[p]][["modelName"]])
###
df_manufacturer_rbind <- data.frame()
for(p in 1:length(resp_json[["results"]][["manufacturers"]])){
print(p)
df_manufacturer <- data.frame(p = p,
manufacturerName = resp_json[["results"]][["manufacturers"]][[p]][["manufacturerName"]],
modelName = resp_json[["results"]][["manufacturers"]][[p]][["modelName"]])
df_manufacturer_rbind <- rbind (df_manufacturer_rbind, df_manufacturer)
}
###
df_manufacturer_rbind <- data.frame()
for(p in 1:length(resp_json[["results"]][["manufacturers"]])){
print(p)
df_manufacturer <- data.frame(p = p,
name = resp_json[["results"]][["name"]][p]
manufacturerName = resp_json[["results"]][["manufacturers"]][[p]][["manufacturerName"]],
###
df_manufacturer_rbind <- data.frame()
for(p in 1:length(resp_json[["results"]][["manufacturers"]])){
print(p)
df_manufacturer <- data.frame(p = p,
name = resp_json[["results"]][["name"]][p],
manufacturerName = resp_json[["results"]][["manufacturers"]][[p]][["manufacturerName"]],
modelName = resp_json[["results"]][["manufacturers"]][[p]][["modelName"]])
df_manufacturer_rbind <- rbind (df_manufacturer_rbind, df_manufacturer)
}
# ARG
url <- "https://api.openaq.org/v2/locations?country=AR"
response <- GET(url)
resp_json <- fromJSON(content(response, as = "text"))
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][i],
city = resp_json[["results"]][["city"]][i],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][i],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][i],
manufacturers = resp_json[["results"]][["manufacturers"]][[i]][["manufacturerName"]],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
# ARG
url <- "https://api.openaq.org/v2/locations?country=AR"
response <- GET(url)
resp_json <- fromJSON(content(response, as = "text"))
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][i],
city = resp_json[["results"]][["city"]][i],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][i],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][i],
manufacturers = resp_json[["results"]][["manufacturers"]][[i]][["manufacturerName"]],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
write.csv(df_contaminante_rbind,"D:/Josefina/Congresos/Air Pollution Conference 2024/OpenAQ/sensores_arg.csv")
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][i],
city = resp_json[["results"]][["city"]][i],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][i],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][i],
manufacturers = resp_json[["results"]][["manufacturers"]][[i]][["manufacturerName"]],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
average = resp_json[["results"]][["parameters"]][[i]][["average"]],
count = resp_json[["results"]][["parameters"]][[i]][["count"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
write.csv(df_contaminante_rbind,"D:/Josefina/Congresos/Air Pollution Conference 2024/OpenAQ/sensores_arg.csv")
sensor_search <- function(city_ID){
# ARG - prueba
url <- paste("https://api.openaq.org/v2/locations?country=",city_ID,sep = "")
response <- GET(url)
resp_json <- fromJSON(content(response, as = "text"))
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][i],
city = resp_json[["results"]][["city"]][i],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][i],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][i],
manufacturers = resp_json[["results"]][["manufacturers"]][[i]][["manufacturerName"]],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
average = resp_json[["results"]][["parameters"]][[i]][["average"]],
count = resp_json[["results"]][["parameters"]][[i]][["count"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
save_name <-paste("D:/Josefina/Congresos/Air Pollution Conference 2024/OpenAQ/sensor_",city_ID,".csv",sep="")
write.csv(df_contaminante_rbind,save_name)
print("Save")
}
sensor_search("AR")
sensor_search <- function(city_ID){
# ARG - prueba
url <- paste("https://api.openaq.org/v2/locations?country=",city_ID,sep = "")
response <- GET(url)
resp_json <- fromJSON(content(response, as = "text"))
df_contaminante_rbind <- data.frame()
for (i in 1:length(resp_json[["results"]][["parameters"]])){
#print(c("esto es i", i))
df_contaminante <- data.frame(name = resp_json[["results"]][["name"]][i],
city = resp_json[["results"]][["city"]][i],
latitude=  resp_json[["results"]][["coordinates"]][["latitude"]][i],
longitude = resp_json[["results"]][["coordinates"]][["longitude"]][i],
manufacturers = resp_json[["results"]][["manufacturers"]][[i]][["manufacturerName"]],
id =resp_json[["results"]][["parameters"]][[i]][["id"]],
unit = resp_json[["results"]][["parameters"]][[i]][["unit"]],
lastValue = resp_json[["results"]][["parameters"]][[i]][["lastValue"]],
average = resp_json[["results"]][["parameters"]][[i]][["average"]],
count = resp_json[["results"]][["parameters"]][[i]][["count"]],
parameter = resp_json[["results"]][["parameters"]][[i]][["parameter"]],
displayName = resp_json[["results"]][["parameters"]][[i]][["displayName"]],
lastUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["lastUpdated"]],
firstUpdatedUTC = resp_json[["results"]][["parameters"]][[i]][["firstUpdated"]])#
df_contaminante_rbind <- rbind (df_contaminante_rbind,df_contaminante)
}
save_name <-paste("D:/Josefina/Congresos/Air Pollution Conference 2024/OpenAQ/sensor_",city_ID,".csv",sep="")
write.csv(df_contaminante_rbind,save_name)
print("Save")
return(df_contaminante_rbind)
}
sensor_search("CH")
ch <- sensor_search("CH")
View(ch)
ch <- sensor_search("CL")
View(ch)
br <- sensor_search("BR")
View(br)
url_bel <- "https://api.openaq.org/v2/measurements?location_id=234708&parameter=um100&parameter=pm10&parameter=temperature&parameter=um005&parameter=um025&parameter=humidity&parameter=um003&parameter=um050&parameter=um010&parameter=pm1&parameter=pm25&parameter=pressure&date_from=2024-01-10T08:00:30-06:00&date_to=2024-01-11T08:00:30-06:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
View(resp_json_bel)
Belize <- sensor_search("BZ")
View(Belize)
url_bel <- "https://api.openaq.org/v2/measurements?location_id=921085&parameter=pressure&parameter=temperature&parameter=um010&parameter=pm1&parameter=pm10&parameter=um003&parameter=um100&parameter=um005&parameter=humidity&parameter=um025&parameter=um050&parameter=voc&parameter=pm25&date_from=2024-01-10T10:10:23-04:00&date_to=2024-01-11T10:10:23-04:00&limit=1000
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
url_bel <- "https://api.openaq.org/v2/measurements?location_id=921085&parameter=pressure&parameter=temperature&parameter=um010&parameter=pm1&parameter=pm10&parameter=um003&parameter=um100&parameter=um005&parameter=humidity&parameter=um025&parameter=um050&parameter=voc&parameter=pm25&date_from=2024-01-10T10:10:23-04:00&date_to=2024-01-11T10:10:23-04:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Bolivia <- sensor_search("BO")
View(Bolivia)
Brazil<- sensor_search("BR")
View(Brazil)
Chile<- sensor_search("CL")
url_bel <- "https://api.openaq.org/v2/measurements?location_id=688451&parameter=pressure&parameter=um050&parameter=um005&parameter=pm25&parameter=temperature&parameter=humidity&parameter=pm1&parameter=pm10&parameter=temperature&parameter=um003&parameter=um025&parameter=um010&parameter=um100&date_from=2024-01-10T09:12:03-05:00&date_to=2024-01-11T09:12:03-05:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Colombia<- sensor_search("CO")
View(Colombia)
url_bel <- "https://api.openaq.org/v2/measurements?location_id=69712&parameter=um003&parameter=um005&parameter=um010&parameter=humidity&parameter=um100&parameter=pressure&parameter=pm10&parameter=um050&parameter=pm25&parameter=um025&parameter=pm1&parameter=temperature&date_from=2024-01-10T08:13:15-06:00&date_to=2024-01-11T08:13:15-06:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Costa_Rica <- sensor_search("CR")
View(Costa_Rica)
url_bel <- "https://api.openaq.org/v2/measurements?location_id=226158&parameter=pm1&parameter=um010&parameter=um100&parameter=um025&parameter=pm10&parameter=pm25&date_from=2024-01-10T10:14:52-04:00&date_to=2024-01-11T10:14:52-04:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
url_bel <- "https://api.openaq.org/v2/measurements?location_id=226158&parameter=pm1&parameter=um010&parameter=um100&parameter=um025&parameter=pm10&parameter=pm25&date_from=2024-01-10T10:14:52-04:00&date_to=2024-01-11T10:14:52-04:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
url_bel <- "https://api.openaq.org/v2/measurements?location_id=337324&parameter=pm1&parameter=um100&parameter=um003&parameter=humidity&parameter=um025&parameter=um010&parameter=pm10&parameter=pm25&parameter=temperature&parameter=temperature&parameter=um050&parameter=pressure&parameter=um005&date_from=2024-01-10T09:17:56-05:00&date_to=2024-01-11T09:17:56-05:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Ecuador <- sensor_search("EC")
View(Ecuador)
url_bel <- "https://api.openaq.org/v2/measurements?location_id=1665631&parameter=voc&parameter=temperature&parameter=humidity&parameter=um010&parameter=um005&parameter=pm1&parameter=pm10&parameter=um003&parameter=pressure&parameter=um050&parameter=um100&parameter=pm25&parameter=um025&date_from=2024-01-10T08:21:29-06:00&date_to=2024-01-11T08:21:29-06:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
El Salvador<- sensor_search("SV")
url_bel <- "https://api.openaq.org/v2/measurements?location_id=8574&parameter=pm10&parameter=o3&parameter=pm25&date_from=2024-01-10T08:22:29-06:00&date_to=2024-01-11T08:22:29-06:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Guatemala<- sensor_search("GT")
url_bel <- "https://api.openaq.org/v2/measurements?location_id=236329&parameter=um050&parameter=um025&parameter=um010&parameter=um005&parameter=um003&parameter=humidity&parameter=temperature&parameter=pressure&parameter=pm10&parameter=pm25&parameter=um100&parameter=pm1&date_from=2024-01-10T08:24:03-06:00&date_to=2024-01-11T08:24:03-06:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Honduras<- sensor_search("HN")
Mexico<- sensor_search("MX")
View(Honduras)
View(Mexico)
Nicaragua<- sensor_search("NC")
url_bel <- "https://api.openaq.org/v2/measurements?location_id=1067274&parameter=humidity&parameter=pm1&parameter=um100&parameter=um003&parameter=um025&parameter=pm25&parameter=temperature&parameter=voc&parameter=pm10&parameter=um005&parameter=um050&parameter=um010&parameter=pressure&date_from=2024-01-10T09:26:19-05:00&date_to=2024-01-11T09:26:19-05:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
url_bel <- "https://api.openaq.org/v2/measurements?location_id=886285&parameter=um003&parameter=pm10&parameter=um010&parameter=um005&parameter=pressure&parameter=voc&parameter=pm25&parameter=pm1&parameter=humidity&parameter=um025&parameter=um100&parameter=um050&parameter=temperature&date_from=2024-01-10T09:26:57-05:00&date_to=2024-01-11T09:26:57-05:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
url_bel <- "https://api.openaq.org/v2/measurements?location_id=886285&parameter=um003&parameter=pm10&parameter=um010&parameter=um005&parameter=pressure&parameter=voc&parameter=pm25&parameter=pm1&parameter=humidity&parameter=um025&parameter=um100&parameter=um050&parameter=temperature&date_from=2023-12-15T09:26:57-05:00&date_to=2024-01-11T09:26:57-05:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Panama<- sensor_search("PA")
View(Panama)
url_bel <- "https://api.openaq.org/v2/measurements?location_id=1656789&parameter=pm25&date_from=2024-01-10T11:31:24-03:00&date_to=2024-01-11T11:31:24-03:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Paraguay<- sensor_search("PY")
View(Paraguay)
url_bel <- "https://api.openaq.org/v2/measurements?location_id=356979&parameter=um003&parameter=pressure&parameter=temperature&parameter=um005&parameter=humidity&parameter=um050&parameter=um025&parameter=um100&parameter=um010&parameter=pm25&parameter=pm1&parameter=pm10&date_from=2024-01-10T09:36:44-05:00&date_to=2024-01-11T09:36:44-05:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
Peru<- sensor_search("PE")
url_bel <- "https://api.openaq.org/v2/measurements?location_id=6922&parameter=o3&parameter=pm25&date_from=2024-01-10T10:37:33-04:00&date_to=2024-01-11T10:37:33-04:00&limit=1000"
response_bel <- GET(url_bel)
resp_json_bel <- fromJSON(content(response_bel, as = "text"))
View(Peru)
Puerto_Rico<- sensor_search("PR")
View(Puerto_Rico)
Uruguay<- sensor_search("UY")
View(Uruguay)
Venezuela<- sensor_search("VE")
View(Venezuela)
Cuba<- sensor_search("CU")# NO HAY SENSORES
Dominican_Republic<- sensor_search("DR")# ultima actualizacion 2 años
Haiti<- sensor_search("HT")# NOHAY
Dominican_Republic<- sensor_search("DR")# ultima actualizacion 2 años
Argentina <- sensor_search("AR")
Belize <- sensor_search("BZ")
Bolivia <- sensor_search("BO")
Brazil<- sensor_search("BR")
Chile<- sensor_search("CL")
Colombia<- sensor_search("CO")
Costa_Rica <- sensor_search("CR")
Cuba<- sensor_search("---")# NO HAY SENSORES
Dominican_Republic<- sensor_search("DR")# ultima actualizacion 2 años
Ecuador <- sensor_search("EC")
El Salvador<- sensor_search("SV")
El_Salvador<- sensor_search("SV")
Guatemala<- sensor_search("GT")
Honduras<- sensor_search("HN")
Mexico<- sensor_search("MX")
Panama<- sensor_search("PA")
Paraguay<- sensor_search("PY")
Peru<- sensor_search("PE")
Puerto_Rico<- sensor_search("PR")
Uruguay<- sensor_search("UY")
Venezuela<- sensor_search("VE")
tot <- rbind(Uruguay,Venezuela)
View(tot)
Uruguay$pais <- "Uruguay"
Venezuela$pais <- "Venezuela"
tot <- rbind(Uruguay,Venezuela)
Argentina$pais <- "Argentina"
Chile$pais <- "Chile"
Colombia$pais <- "Colombia"
Costa_Rica$pais <- "Costa_Rica"
Dominican_Republic$pais <- "Dominican_Republic"
Ecuador$pais <- "Ecuador"
El_Salvador$pais <- "El_Salvador"
Guatemala$pais <- "Guatemala"
Honduras$pais <- "Honduras"
Mexico$pais <- "Mexico"
Nicaragua<- sensor_search("----") #NO HAY
Nicaragua$pais <-"Nicaragua"
Panama$pais <- "Panama"
Paraguay$pais <- "Paraguay"
Peru$pais <- "Peru"
Puerto_Rico$pais <- "Puerto_Rico"
Uruguay$pais <- "Uruguay"
Venezuela$pais <- "Venezuela"
Uruguay<- sensor_search("UY")
Uruguay$pais <- "Uruguay"
Venezuela<- sensor_search("VE")
Venezuela$pais <- "Venezuela"
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia,              Costa Rica
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia,
Costa_Rica,#Cuba,
Dominican_Republic, Ecuador, El_Salvador,
Guatemala, Haiti, Honduras, Mexico, #Nicaragua,
Panama, Paraguay, Peru,Puerto_Rico, Uruguay,
Venezuela)
Uruguay
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia,
Costa_Rica,#Cuba,Haiti
Dominican_Republic, Ecuador, El_Salvador,
Guatemala, Honduras, Mexico, #Nicaragua,
Panama, Paraguay, Peru,Puerto_Rico, Uruguay,
Venezuela)
Colombia
Dominican_Republic
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia,
Costa_Rica,#Cuba,Haiti Dominican_Republic,
Ecuador, El_Salvador,
Guatemala, Honduras, Mexico, #Nicaragua,
Panama, Paraguay, Peru,Puerto_Rico, Uruguay,
Venezuela)
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia),
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia)#,
tot <- rbind(Argentina, Belize)#, Bolivia, Brazil, Chile, Colombia)#,
Belize$pais <- "Belize"
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia)#,
Bolivia$pais <- "Bolivia"
Brazil$pais <- "Brazil"
Chile$pais <- "Chile"
Colombia$pais <- "Colombia"
Costa_Rica$pais <- "Costa_Rica"
Ecuador$pais <- "Ecuador"
El_Salvador$pais <- "El_Salvador"
Guatemala$pais <- "Guatemala"
Honduras$pais <- "Honduras"
Mexico$pais <- "Mexico"
Nicaragua$pais <-"Nicaragua"
Panama$pais <- "Panama"
Paraguay$pais <- "Paraguay"
Peru$pais <- "Peru"
Puerto_Rico$pais <- "Puerto_Rico"
Uruguay$pais <- "Uruguay"
Venezuela$pais <- "Venezuela"
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia)#,
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia,
Costa_Rica,#Cuba,Haiti Dominican_Republic,
Ecuador, El_Salvador,
Guatemala, Honduras, Mexico, #Nicaragua,
Panama, Paraguay, Peru,Puerto_Rico, Uruguay,
Venezuela)
tot <- rbind(Argentina, Belize, Bolivia, Brazil, Chile, Colombia,
Costa_Rica,#Cuba,Haiti Dominican_Republic,
Ecuador, El_Salvador,
Guatemala, Honduras, Mexico, #Nicaragua,
Panama, Paraguay, Peru,Puerto_Rico, Uruguay,
Venezuela)
View(tot)
write.csv(tot,"D:/Josefina/Congresos/Air Pollution Conference 2024/OpenAQ/sensores_LatAm.csv")
setwd("D:/Josefina/Congresos/Air Pollution Conference 2024/OpenAQ/code")
git init
